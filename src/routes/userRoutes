const express = require("express");
const bcrypt = require('bcryptjs')
const { createUser, userLogIn,userUpdate, userDelete, userLogOut} = require('../controller/userController');
const {validateInputRegister,validateInputLogin,validateInputUpdate} = require('../middleware/validation/userValidation')
const {isAuth} = require("../middleware/auth");


const router = express.Router()


router.post('/register',validateInputRegister,createUser);
router.post('/login',validateInputLogin,userLogIn);
router.put('/update',isAuth,validateInputUpdate,userUpdate)
router.delete('/delete',isAuth,userDelete)
router.post('/logout',isAuth,userLogOut);

// .post("/login", async  (req, res) => {
//   try {
//     console.log(req.body) 
//     // Get user input
//     const { email, password } = req.body;

//     // Validate user input
//     if (!(email.toLowerCase() && password)) {
//       res.status(400).send("All input is required");
//     }
//     else {
//     // Validate if user exist in our database
//     const user = await User.findOne({ email : email.toLowerCase() });

//     let jwtSecretKey = process.env.JWT_SECRET_KEY;

//     if (user && (await bcrypt.compare(password, user.password))) {
//       console.log("User id:  " + user._id)
      
//       let data = {
//         user_id: user._id,
//         email: user.email,
//         pseudo: user.pseudo,
//         role: user.role,
//         time: Date()
//       }

//       // Create token
//       const token = jwt.sign(data,jwtSecretKey,{expiresIn: "2h"});

//       // save user token
//       user.token = token;

//       // user
//       res.status(200).json(user);
//     }
//     else 
//       res.status(400).send("email ou mot de passe invalid");
//     }
//   } catch (err) {
//     res.statusCode(500).send(err);
//   }
// })

// .delete("/delete",auth, async (req,res) => 
// {
 
//   const {email} = req.user.email
//   const emailWhantDelete  = req.query.email

//   console.log(emailWhantDelete)

//   console.log(process.env.JWT_SECRET_KEY)
//   if (email == emailWhantDelete)
//   {
//     res.status(200).send("your account is now delete")
  
//   }
//   else
//   {
//     res.status(201).send("you don't have permissions to delete another account over you" )
//   }
// })




module.exports = router;